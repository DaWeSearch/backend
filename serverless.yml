service: slr-backend 

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  environment:
    MONGO_DB_ENV: ${env:MONGO_DB_ENV}
    MONGO_DB_USER: ${env:MONGO_DB_USER}
    MONGO_DB_PASS: ${env:MONGO_DB_PASS}
    MONGO_DB_URL: ${env:MONGO_DB_URL}
    SPRINGER_API_KEY: ${env:SPRINGER_API_KEY}
    ELSEVIER_API_KEY: ${env:ELSEVIER_API_KEY}
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

functions:
  dry_query:
    handler: handler.dry_query
    events:
      - http:
          path: query
          method: get
          cors: true
  new_query:
    handler: handler.new_query
    events:
      - http:
          path: review/{review_id}/query
          method: post
          cors: true
          request:
            parameters:
              paths:
                review_id: true
  get_persisted_results:
    handler: handler.get_persisted_results
    events:
      - http:
          path: results/{review_id}
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                page: false
                page_length: false
              paths:
                review_id: true
  persist_page_of_query:
    handler: handler.persist_pages_of_query
    events:
      - http:
          path: persist/{review_id}
          method: post
          cors: true
          request:
            parameters:
              querystrings:
                query_id: true
              paths:
                review_id: true
  persist_list_of_results:
    handler: handler.persist_list_of_results
    events:
      - http:
          path: persist/{review_id}/list
          method: post
          cors: true
          request:
            parameters:
              querystrings:
                query_id: true
              paths:
                review_id: true
  delete_results_by_dois:
    handler: handler.delete_results_by_dois
    events:
      - http:
          path: persist/{review_id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                review_id: true


  # https://www.serverless.com/framework/docs/providers/aws/events/apigateway#request-parameters         cors: true
  # sample_handler:
  #   handler: handler.sample_handler
  #   events:
  #     - http:
  #         path: query/{my_path_param}
  #         method: post
  #         request:
  #           parameters:
  #             querystrings:
  #               my_query_string: false
  #             paths:
  #               my_path_param: true