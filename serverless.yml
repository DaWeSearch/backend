service: slr-backend

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  environment:
    MONGO_DB_ENV: ${env:MONGO_DB_ENV}
    MONGO_DB_USER: ${env:MONGO_DB_USER}
    MONGO_DB_PASS: ${env:MONGO_DB_PASS}
    MONGO_DB_URL: ${env:MONGO_DB_URL}
    SPRINGER_API_KEY: ${env:SPRINGER_API_KEY}
    ELSEVIER_API_KEY: ${env:ELSEVIER_API_KEY}
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

functions:
  dry_query:
    handler: handler.dry_query
    events:
      - http:
          path: query
          method: post
          cors: true
          response:
            statusCodes:
              201:
                pattern: ''
  add_user_endpoint:
    handler: handler.add_user_endpoint
    events:
      - http:
          path: users
          method: post
          cors: true
          response:
            statusCodes:
              201:
                pattern: ''
#  get_user_by_id:
#    handler: handler.get_user_by_id
#    events:
#      - http:
#        path: query2
#        method: post
#        cors: true
#        response:
#          statusCodes:
#            201:
#              pattern: ''
#  get_users:
#    handler: handler.get_users
#    events:
#      - http:
#        path: query3
#        method: post
#        cors: true
#        response:
#          statusCodes:
#            201:
#              pattern: ''
#  update_user:
#    handler: handler.update_user
#    events:
#      - http:
#        path: query4
#        method: post
#        cors: true
#        response:
#          statusCodes:
#            201:
#              pattern: ''
#  delete_user:
#    handler: handler.delete_user
#    events:
#      - http:
#        path: query5
#        method: post
#        cors: true
#        response:
#          statusCodes:
#            201:
#              pattern: ''
